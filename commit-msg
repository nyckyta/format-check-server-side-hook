#!/usr/bin/python3

import sys
import re
import ssl
import subprocess
from smtplib import SMTP_SSL

maxHeaderLength = 70
minHeaderLength = 10
softHeaderPattern = re.compile("^(feat|fix|docs|style|refactor|test|chore|optimize)(\([A-Z]*-[0-9]*\))?: [a-z ,]{5,}$")
hardHeaderPattern = re.compile("^(feat|fix|docs|style|refactor|test|chore|optimize)(\([A-Z]*-[0-9]*\)): [a-z ,]{5,}$")
lastLinePattern = re.compile("[a-zA-Z]*-[0-9]*")

def checkMsgFormat(commitMsgWithoutComments):
    header = commitMsgWithoutComments[0]
    errors = []
    if len(header) > maxHeaderLength or len(header) < minHeaderLength:
        errors.append("Header must have size between 10 and 70 characters")
    if not softHeaderPattern.match(header):
        errors.append("""Header does not match pattern, please see this guide: https://karma-runner.github.io/2.0/dev/git-commit-msg.html. Also note that <subject> should not be less than 5 symbols, and general header length should take at least 10 symbols.""")
    if hardHeaderPattern.match(header) and (len(commitMsgWithoutComments) < 3 or not lastLinePattern.match(commitMsgWithoutComments[-1])):
        errors.append("Last line of commit message should contain information about ticket related to the commit")
    return errors


def sendMail(msg, address):
    # Create a secure SSL context
    context = ssl.create_default_context()

    with SMTP_SSL("smtp.gmail.com", 465, context=context) as server:
        server.login("email_from", "pass")
        server.sendmail("email_from", address, msg)


def getEmailFromCommitRef(commitRef):
    process = subprocess.Popen(['git log --max-count=1 --format="%ae" ' + commitRef], shell="True", stdout=subprocess.PIPE)
    email = str(process.communicate()[0], "utf-8")
    return email

def getMessageBodyFromCommitRef(commitRef):
    process = subprocess.Popen(['git log --max-count=1 --format="%b" ' + commitRef], shell="True", stdout=subprocess.PIPE)
    body = str(process.communicate()[0], "utf-8")
    return body

# def main():
#     commitWithoutFullLineComments = [line for line in open(sys.argv[1],'r') if line.strip()[0] != '#']
#     errors = checkMsgFormat(commitWithoutFullLineComments)
#     print(errors)
#     if (len(errors) > 0):
#         createMessage(commitsRefs, errors)
#         sendMail()
    #exit(0)

if __name__ == "__main__":
    email = getMessageBodyFromCommitRef('265e2362990cc61398057d457e3e32ca35915f9e')
    print(email)